extend type ApplicationBlueprint {
        """
        Oc Project Overview
        """
        overview: Overview! @client
}

type Overview {
  """
  Number of Deployments
  """
  deployments: Int

  """
  Short description of the project.
  """
  description: String

  """
  The GitLab Flavored Markdown rendering of `description`
  """
  descriptionHtml: String

  """
  OneCommons general Environments
  """
  environments: [OcEnvironment!]

  """
  Full path of the project.
  """
  fullPath: ID!

  """
  ID of the project.
  """
  id: ID!

  """
  Image from unfurl file
  """
  image: String

  """
  OneCommons general Inputs
  """
  inputs: [Input!]

  """
  Live preview url from unfurl file
  """
  livePreview: String

  """
  Name of the project (without namespace).
  """
  name: String!

  """
  OneCommons general outputs
  """
  outputs: [Output!]

  """
  OneCommons general requirements
  """
  requirements: [Requirement!]

  """
  OneCommons general resources
  """
  resources: [Resource!]

  """
  OneCommons Services to connect
  """
  servicesToConnect: [ServiceToConnect!]

  """
  Source code url
  """
  sourceCodeUrl: String

  """
  OneCommons templates
  """
  templates(
    """
    If we want to search template by title.
    """
    searchBySlug: String

    """
    If we want to search template by title.
    """
    searchByTitle: String

    """
    If we want to search template by type.
    """
    searchByType: String
  ): [Template!]

  """
  Live preview url from unfurl file
  """
  title: String

  """
  Web URL of the project.
  """
  webUrl: String
}

type Input {
  """
  Description of input
  """
  instructions: String

  """
  Title of input
  """
  title: String!

  """
  Value of input
  """
  value: String

  """
  Value of input
  """
  default: JSON

  """
  Value of input
  """
  required: Boolean
}

type Output {
  """
  Description of output
  """
  instructions: String

  """
  Title of output
  """
  title: String!
}

type Requirement {
  """
  Badge of  requirement
  """
  badge: String

  """
  Specific if node was created or connected
  """
  connected: Boolean

  """
  Specific if node was created or connected
  """
  created: Boolean

  """
  description of  requirement
  """
  description: String

  """
  Template inputs
  """
  inputs: [Input!]

  """
  Template outputs
  """
  outputs: [Output!]

  """
  Template requirements
  """
  requirements: [Requirement!]

  """
  status of requirement
  """
  status: Boolean

  """
  Title of  requirement
  """
  title: String!

  """
  Type of  requirement
  """
  type: String
}

type Resource {
  """
  Avatar or image of resource
  """
  avatar: String

  """
  Badge of resource
  """
  badge: String

  """
  Description of resource
  """
  description: String

  """
  Template inputs
  """
  inputs: [Input!]

  """
  Name of resource
  """
  name: String!

  """
  Platform of resource
  """
  platform: String

  """
  List of requirements
  """
  requirements: JSON

  """
  Type of resource
  """
  type: String

  """
  Value of resource
  """
  value: String!
}

type ServiceToConnect {
  """
  Avatar or image of service
  """
  avatar: String

  """
  Description of Service
  """
  description: String

  """
  Name of Service
  """
  name: String!

  """
  Platform that service use
  """
  platform: String

  """
  Type of Service
  """
  type: String!

  """
  Value of Service
  """
  value: String
}


