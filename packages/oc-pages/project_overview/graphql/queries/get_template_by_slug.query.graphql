
#import "../fragments/template_item.fragment.graphql"
#import "../fragments/resource_type.fragment.graphql"
#import "../fragments/input_item.fragment.graphql"

#query getTemplateBySlug($projectPath: ID!) {
#  applicationBlueprint(fullPath: $projectPath) {
#      __typename
#      json
#      overview @client {
#        __typename
#        id
#        templates {
#          __typename
#          ...TemplateItem
#        }
#    }
#  }
#}

#query getTemplateBySlug($projectPath: ID!) {
#  newApplicationBlueprint(fullPath: $projectPath) @client {
#    name
#    deploymentTemplates {
#      name
#      blueprint {
#        name
#        deploymentTemplates {
#          name
#          blueprint {
#            name
#          }
#        }
#      }
#    }
#}
#}

#query getTemplateBySlug($projectPath: ID!) {
#  newApplicationBlueprint(fullPath: $projectPath) @client {
#    __typename
#    name
#    primary {
#      name
#      properties {...InputItems}
#      requirements {
#       name
#        description
#        resourceType {...ResourceTypes}
#        min
#        max
#      }
#      outputs {
#        instructions
#        title
#      }
#    }
#    deploymentTemplates {
#      name
#      title
#      cloud
#      slug
#      blueprint {
#        name
#        primary {
#          name
#        }
#      }
#      resourceTemplates {
#        name
#        title
#        description
#        type
#        properties
#        outputs
#        requirements
#      }
#      primary
#    }
#  }
#}

query getTemplateBySlug($projectPath: ID!) {
  newApplicationBlueprint(fullPath: $projectPath) @client {
    __typename
    name
    primary {
      name
      properties {...InputItems}
      requirements {
       name
        description
        resourceType {...ResourceTypes}
        min
        max
      }
      outputs {
        instructions
        title
      }
    }
    deploymentTemplates {
      name
      title
      cloud
      slug
      blueprint {
        name
        primary {
          name
        }
      }
      resourceTemplates {
        name
        title
        description
        type
        properties
        outputs
        requirements
      }
      primary
    }
  }
}

